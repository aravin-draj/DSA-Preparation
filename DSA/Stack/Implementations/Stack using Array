package stack;

class StackUsingArray {
	private int maxSize;
	private int top;
	private int[] stackArray;
	
	StackUsingArray(int size){
		maxSize=size;
		top=-1;
		stackArray=new int[size];
	}
	
	public boolean isEmpty() {
		return(top==-1);
	}
	
	public boolean isFull() {
		return(top==maxSize-1);
	}
	
	public void push(int value) {
		if(isFull()) {
			System.out.println("Stack is Full.Cannot Push "+value);		}
		else {
			stackArray[++top]=value;
			System.out.println("Pushed "+value+" to the Stack");
			
		}
	}
	
	public int pop() {
		if(isEmpty()) {
			System.out.println("Stack is Empty,Cannot pop");
			return -1;
		}
		else {
			int value=stackArray[top--];
			System.out.println("Popped "+value+" from the Stack");
			return value;
		}
	}
	
	public int peek() {
		if(isEmpty()) {
			System.out.println("Stack is Empty,Cannot peek");
			return -1;
		}
		else {
			return stackArray[top];
		}
		
	}
	
	public void display() {
		if(isEmpty()) {
			System.out.println("Stack is Empty");
		}
		else {
			System.out.println("Stack Elements Are :");
			for(int i=top;i>=0;i--) {
				System.out.println(stackArray[i]);
			}
			System.out.println();
		}
	}

}
